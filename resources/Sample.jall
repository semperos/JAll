/**
 * This is a license notice.
 * Parse this, too.
 */

// Don't forget one-line comments either

package com.semperos;//inline comments too

import java.util.List;
import static java.lang.Math.*;
import java.util.ArrayList;

import com.semperos.util.Wowza;

$import_clj{{
  (:require [clojure.string :as string])
}}
$import_rb{{
  require 'nokogiri'
}}
$import_sc{{
  import java.io.{FileInputStream, File}
  import scala.collection.immutable.List
}}

$state_clj nameOfState {{
  (ref {:foo "bar" :langs #{:clojure :jruby :scala}})
}}
$state_rb name_of_state {{
  {:foo "bar" :langs [:clojure :jruby :scala]}
}}
$state_sc nameOfState : scala.collection.immutable.List {{
  List("clojure", "jruby", "scala")
}}

$helper_clj{{
  (defn try-me
    []
    (println "Clojure helper function"))
}}

$helper_rb{{
  def try_me
    puts "Ruby helper method"
  end
}}

$helper_sc{{
  def tryMe() {
    println("Scala helper method")
  }
}}

public class Sample {

    public static void sayHelloToEveryoneLoudly(List<String> names, String punctuation) {
        $def_clojure say-hello-to-everyone-loudly (arr-of-names : java.util.List<java.lang.String>, punctuation : String) : void {{
            (let [names (map #(string/upper-case %) arr-of-names)]
              (doseq [n names]
                (println (str "Hello, " n punctuation))))
        }}
        $clj_say-hello-to-everyone-loudly(names, "!!!");
        $clj_Foo/should-be-same-package();
        $clj_Wowza/should-be-com-semperos-util();
    }

    public static Integer squareThenDivideByTwo(Integer x) {
        $def_ruby square_nums (x : Integer) : Integer {{
            x * x
        }}
        Integer aSquare = $rb_square_nums(x);
        return aSquare / 2;
    }

    public static Integer timesEight(Integer x) {
        $def_sc timesEight(x : Integer) : Integer {{
          x * 8
        }}
        Integer myNum = $sc_timesEight(x);
        return myNum;
    }

    $def_rb widget_xml() : void {{
        builder = Nokogiri::XML::Builder.new do |xml|
        xml.root {
          xml.products {
            xml.widget {
              xml.id_ "awesome-widget-1"
              xml.name "Awesome widget"
            }
          }
        }
        end
        puts builder.to_xml
    }}

    public static void main(String[] args) {
        ArrayList<String> ns = new ArrayList<String>();
        ns.add("Martin");
        ns.add("Niles");
        ns.add("Frasier");

        $clj_say-hello-to-everyone-loudly(ns, "!!!!!");

        Integer x = squareThenDivideByTwo(9);
        System.out.println("Your number is " + x);

        System.out.println("Printing widget XML...");
        $rb_widget_xml();
    }
}
